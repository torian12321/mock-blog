{"version":3,"sources":["ui/components/Comment/Comment.module.scss","ui/components/Post/Post.module.scss","ui/components/formComponents/Field/Field.module.scss","ui/components/AddComment/AddComment.module.scss","ui/layout/layout.module.scss","ui/components/Button/Button.module.scss","apiContext/apiContextComments/apiContextComments.context.ts","apiContext/constants.ts","apiContext/apiContextComments/apiContextComments.tsx","ui/layout/Header.tsx","ui/layout/index.tsx","hooks/useFetch.ts","hooks/api/constants.ts","ui/components/formComponents/Label/Label.tsx","ui/components/formComponents/Field/Field.tsx","ui/components/Button/Button.tsx","ui/components/AddComment/AddComment.tsx","ui/components/Post/Post.tsx","views/home/Home.view.tsx","hooks/api/posts/index.ts","ui/components/Comment/Comment.tsx","ui/components/Comment/CommentsGroup.tsx","views/article/Article.view.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Context","React","createContext","URL_COMMENTS","getDateToday","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","CommentsProvider","props","children","useState","comments","setComments","errors","setErrors","isFetching","setIsFetching","now","lastUpdate","setLastUpdate","useEffect","fetchComments","url","axios","get","then","response","data","catch","error","fetchCommnentByPostId","postId","Provider","value","actions","getCommnentById","id","find","c","addComment","args","post","date","Header","className","styles","header","to","Card","wrapper","useFetch","setData","fetchUrl","a","fetch","json","reload","URL_POSTS","Label","caption","htmlFor","content","Field","name","label","placeholder","type","classnames","field","component","Button","onClick","disabled","btn","btn_disabled","formValidate","values","user","AddComment","onAddComment","showForm","setShowForm","formContainer","onSubmit","initialValues","validate","render","handleSubmit","valid","v","Object","keys","length","constructor","formIsValid","Post","title","body","dangerouslySetInnerHTML","__html","PostItem","key","publish_date","ViewHome","useGetPosts","posts","isLoading","map","Comment","comment","header_date","C","level","comment_response","CommentsGroup","loading","com","sortComments","parentId","node","sort","b","reverse","filter","parent_id","forEach","push","ViewArticle","useParams","useGetPostById","context","useContext","Error","useCommentsState","handleAddComment","console","log","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ebb4a5bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"Comment_comment__3Mz33\",\"comment_response\":\"Comment_comment_response__2rqUj\",\"body\":\"Comment_body__2zzxR\",\"header\":\"Comment_header__3zM0p\",\"header_date\":\"Comment_header_date__1LkQG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2EB2l\",\"body\":\"Post_body__2MiGR\",\"header\":\"Post_header__2IptI\",\"date\":\"Post_date__Kr7ri\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Field_wrapper__PFoPD\",\"content\":\"Field_content__bZ_Ml\",\"label\":\"Field_label__1ffeG\",\"field\":\"Field_field__f3b1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"AddComment_btn__2iVx1\",\"formContainer\":\"AddComment_formContainer__2si1H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"layout_wrapper__25n3_\",\"header\":\"layout_header__3ieFQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__2sT6n\",\"btn_disabled\":\"Button_btn_disabled__3gKEb\"};","import React from \"react\";\n\nconst Context = React.createContext({});\n\nconst useCommentsState: any = () => {\n  const context = React.useContext(Context);\n  if (!context) {\n    throw new Error(\n      `Components cannot be rendered outside <CommentsProvider>`\n    );\n  }\n\n  return context;\n};\n\nexport { Context, useCommentsState };\n","\nexport const URL = 'https://api-posts-demo.herokuapp.com';\nexport const URL_POSTS = `${URL}/posts`;\nexport const URL_COMMENTS = `${URL}/comments`;\n","import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { Context } from \"./apiContextComments.context\";\nimport { IComment } from './apiContextComments.interfaces';\nimport { URL_COMMENTS } from '../constants';\n\nconst getDateToday = () => {\n  const today = new Date();\n\n  let dd = today.getDate();\n  let mm = today.getMonth()+1; \n  const yyyy = today.getFullYear();\n  \n  return `${yyyy}-${mm}-${dd}`;\n}\nconst CommentsProvider = (props: any) => {\n  const { children } = props;\n  const [comments, setComments]: [any, any] = useState([]);\n  const [errors, setErrors]: [any, any] = useState(null);\n  const [isFetching, setIsFetching]: [boolean, any] = useState(false);\n  const [lastUpdate, setLastUpdate]: [any, any] = useState(Date.now())\n\n  useEffect(() => {\n    // Set a timestamp for updates.\n    setLastUpdate(Date.now());\n  }, [comments]);\n\n  const fetchComments = (url:string = URL_COMMENTS) => {\n    setIsFetching(true);\n\n    axios.get(url)\n      .then((response) => {\n        const { data = [] } = response;\n        setComments(data);\n      })\n      .catch((error) => {\n        setErrors(error)\n      })\n      .then(() => {\n        setIsFetching(false);\n      });\n  }\n\n  const fetchCommnentByPostId = (postId: string) => {\n    fetchComments(`${URL_COMMENTS}?postId=${postId}`)\n  };\n\n  const addComment = (args: Object) => {  \n    axios.post(URL_COMMENTS, {\n      date: getDateToday(),\n      ...args,\n    })\n    .then((response) => {\n      const { data = {} } = response;\n      const { postId } = data;\n\n      if(!!postId) {\n        fetchCommnentByPostId(postId);\n      }\n    })\n    .catch((error) => {\n      setErrors(error)\n    }); \n  }\n\n  const getCommnentById = (id: string) => (\n    comments.find((c: IComment) => c.id === id) || {}\n  )\n\n  return (\n    <Context.Provider\n      value={{\n        comments,\n        isFetching,\n        lastUpdate,\n        errors,\n        actions: {\n          getCommnentById,\n          addComment,\n          fetchComments,\n          fetchCommnentByPostId,\n        }\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport { CommentsProvider };","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport styles from './layout.module.scss';\n\nconst Header = () => (\n  <header className={styles.header}>\n    <div className='container'>\n      <Link to=\"/\">Home</Link>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport Header from './Header';\nimport styles from './layout.module.scss';\n\nexport const Card = ({ children }: any) => (\n  <div className={styles.wrapper}>\n    <Header />\n    {children}\n  </div>\n);\n\nexport default Card;","import { useState, useEffect } from \"react\";\n\nconst useFetch = (url: string) => {\n  const [data, setData]: [any, any] = useState(null);\n  const [errors, setErrors]: [any, any] = useState(null);\n  const [isFetching, setIsFetching]: [boolean, any] = useState(false);\n\n  useEffect(() => {\n    fetchUrl();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const fetchUrl = async () => {\n    setIsFetching(true);\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n\n      setData(data);\n      setErrors(null);\n    } catch (err) {\n      setData(null);\n      setErrors(err);\n    } finally {\n      setIsFetching(false);\n    }\n  };\n\n  return {\n    data,\n    isFetching,\n    errors,\n    reload: fetchUrl,\n  };\n};\n\nexport { useFetch };","\nexport const URL = 'https://api-posts-demo.herokuapp.com';\nexport const URL_POSTS = `${URL}/posts`;\nexport const URL_COMMENTS = `${URL}/comments`;\n","import React from 'react';\nimport { ILabel } from \"./Label.interfaces\";\n\nexport const Label = ({\n  children,\n  caption,\n  htmlFor,\n  className,\n}: ILabel) => {\n  const content = children || caption;\n\n  return !!content ? (\n    <label htmlFor={htmlFor} className={className}>{content}</label>\n  ) : null\n};\n\nexport default Label;","import React from 'react';\nimport classnames from 'classnames';\nimport { Field as RFFField } from 'react-final-form';\nimport { Label } from 'ui/components/formComponents/Label';\nimport { IField } from \"./Field.interfaces\";\nimport styles from './Field.module.scss';\n\nexport const Field = ({\n  name,\n  label,\n  placeholder,\n  type = 'text',\n  className,\n}: IField) => (\n  <div className={classnames(styles.wrapper, className)}>\n    <div className={styles.content}>\n      <Label htmlFor={name} caption={label} className={styles.label} />\n      <RFFField\n        className={styles.field}\n        name={name}\n        component={type === 'textarea' ? 'textarea' : \"input\"}\n        type={type}\n        placeholder={placeholder}\n      />\n    </div>\n  </div>\n);\n\nexport default Field;","import React from 'react';\nimport classnames from 'classnames';\nimport { IButton } from \"./Button.interfaces\";\nimport styles from './Button.module.scss';\n\nexport const Button = ({\n  children,\n  caption,\n  className,\n  onClick,\n  type = 'submit',\n  disabled = false,\n}: IButton) => {\n  const content = children || caption;\n  const handleOnClick = () => {\n    if (onClick && !disabled) {\n      onClick();\n    }\n  };\n\n  return content ? (\n    <button\n      type={type}\n      onClick={handleOnClick}\n      className={classnames(\n        styles.btn,\n        disabled && styles.btn_disabled,\n        className,\n      )}\n      disabled={disabled}\n    >\n      {content}\n    </button>\n  ) : null;\n};\n\nexport default Button;","import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport { Form } from 'react-final-form';\nimport { Field } from 'ui/components/formComponents/Field';\nimport { Button } from 'ui/components/Button';\nimport { IAddComment } from \"./AddComment.interfaces\";\nimport styles from './AddComment.module.scss';\n\nconst formValidate = (values: any) => {\n  const errors: any = {}\n  if (!values.user) {\n    errors.user = 'Required'\n  }\n  if (!values.content) {\n    errors.content = 'Required'\n  }\n\n  return errors\n};\nconst formIsValid = (values: Object): any => {\n  const v = formValidate(values);\n\n  return !(Object.keys(v).length === 0 && v.constructor === Object);\n}\n\n\nexport const AddComment = ({\n  onAddComment,\n  className,\n}: IAddComment) => {\n  const [showForm, setShowForm] = useState(false);\n\n  const handleShowForm = () => {\n    setShowForm(!showForm)\n  };\n\n  const handleSubmit = (values: Object) => {\n    onAddComment && onAddComment(values)\n    setShowForm(false)\n  }\n\n  return onAddComment ? (\n    <div className={classnames(styles.post, className)}>\n      <Button\n        caption={!showForm ? \"Add Comment\" : 'Close Form'}\n        onClick={handleShowForm}\n        className={styles.btn}\n      />\n      {showForm &&\n        <div className={styles.formContainer}>\n          <Form\n            onSubmit={handleSubmit}\n            initialValues={{}}\n            validate={formValidate}\n            render={({ handleSubmit, values }) => {\n              const valid = formIsValid(values);\n\n              return (\n                <form onSubmit={handleSubmit}>\n                  <Field\n                    label='User Name'\n                    name='user'\n                    placeholder=\"e.g. Bla bla\"\n                  />\n                  <Field\n                    type='textarea'\n                    label='Comment'\n                    name='content'\n                    placeholder=\"Notes\"\n                  />\n                  <Button\n                    caption='Submit'\n                    disabled={valid}\n                    className={styles.btn}\n                  />\n                </form>\n              )\n            }}\n          />\n        </div>\n      }\n    </div>\n  ) : null;\n};\n\nexport default AddComment;","import React from 'react';\nimport classnames from 'classnames';\nimport { AddComment } from 'ui/components/AddComment';\nimport { IPost } from \"./Post.interfaces\";\nimport styles from './Post.module.scss';\n\nexport const Post = ({\n  children,\n  className,\n  title,\n  date,\n  onAddComment,\n}: IPost) => {\n  function createMarkup() {\n    return {__html: children};\n  }\n\n  return (\n    <div className={classnames(styles.post, className)}>\n      <div className={styles.body}>\n        <span className={styles.header}>\n          {title}\n          <span className={styles.date}>\n            {date}\n          </span>\n        </span>\n        <span className={styles.content}>\n          <div dangerouslySetInnerHTML={createMarkup()} />\n        </span>\n        <AddComment onAddComment={onAddComment} />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useGetPosts } from 'hooks/api/posts';\nimport { Post } from 'ui/components/Post';\n\nconst PostItem = ({ data }: any) => (\n  <Post\n    key={data.id}\n    title={data.title}\n    date={data.publish_date}\n  >\n    {data.content}\n  </Post>\n);\n\nexport const ViewHome = () => {\n  const [posts, isLoading] = useGetPosts();\n\n  return (\n    <div className=\"container\">\n      {(!!posts && !isLoading) && posts.map((post: any ={}) =>\n        <Link to={`/article/${post.id}`} key={post.id}>\n          <PostItem data={post} />\n        </Link>\n      )}\n    </div>\n  );\n};\n\nexport default ViewHome;\n","import { useFetch } from 'hooks';\nimport { URL_POSTS } from '../constants';\n\nexport const useGetPosts = () => {\n  const {\n    data = [],\n    isFetching,\n    reload,\n  } = useFetch(URL_POSTS);\n\n  return [\n    data || [],\n    isFetching,\n    reload,\n  ]\n};\n\nexport const useGetPostById = (postId: number | string) => {\n  const {\n    data = [],\n    isFetching,\n    reload,\n  } = useFetch(`${URL_POSTS}?id=${postId}`);\n\n  return [\n    (data && data[0]) || {},\n    isFetching,\n    reload,\n  ]\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport { AddComment } from 'ui/components/AddComment';\nimport { IComment } from \"./Comment.interfaces\";\nimport styles from './Comment.module.scss';\n\nexport const Comment = ({\n  children,\n  className,\n  user,\n  date,\n  onAddComment,\n}: IComment) => (\n  <div className={classnames(\n    styles.comment,\n    className,\n  )}>\n    <div className={styles.body}>\n      <span className={styles.header}>\n        {user} - <span className={styles.header_date}>{date}</span>\n      </span>\n      <span className={styles.content}>\n        {children}\n      </span>\n      <AddComment onAddComment={onAddComment} />\n    </div>\n  </div>\n);\n\nexport default Comment;","import React from 'react';\nimport { Comment } from './Comment';\n// import { ICommentsGroup } from \"./Comment.interfaces\";\nimport styles from './Comment.module.scss';\n\nconst sortComments = (comments:any, parentId: string | null) => {\n  const node: any = [];\n\n  comments\n    .sort((a: any, b: any) => (a.date > b.date) ? 1 : ((b.date > a.date) ? -1 : 0))\n    .reverse()\n    .filter((c:any) => c.parent_id === parentId)\n    .forEach((c: any) => {\n      c.comments = sortComments(comments, c.id);\n      return node.push(c);\n    })\n  return node;\n}\n\nconst C = ({\n  comment = {},\n  level = 1,\n  onAddComment,\n}: any) => {\n  const { id, user, date, content, comments = []} = comment;\n\n  const handleAdd = (args: Object) => {\n    onAddComment({\n      \"parent_id\": id,\n      ...args,\n    })\n  }\n\n  return (\n    <div>\n      <Comment\n        key={id}\n        user={user}\n        date={date}\n        onAddComment={handleAdd}\n      >\n        {content}\n      </Comment>\n      <div className={styles.comment_response}>\n        {comments.map((c: any ={}) => (\n          <C comment={c} level={level + 1} key={c.id} />\n        ))}\n      </div>\n    </div>\n  )\n};\n\nexport const CommentsGroup = ({\n  comments = [],\n  loading = false,\n  onAddComment,\n}: any) => {\n// }: ICommentsGroup) => {\n  const com = sortComments(comments, null);\n  \n  return !loading ? (\n    com.map((comment: any ={}) =>\n      <C comment={comment} key={comment.id} onAddComment={onAddComment} />\n  )) : <span>Loading...</span>\n};\n\nexport default CommentsGroup;","import React, { useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { useGetPostById } from 'hooks/api/posts';\nimport { useCommentsState } from 'apiContext';\n\nimport { Post } from 'ui/components/Post';\nimport { CommentsGroup } from 'ui/components/Comment/CommentsGroup';\n\nexport const ViewArticle = () => {\n  const { postId } = useParams();\n  const [post] = useGetPostById(postId);\n  const { comments, isFetching, actions } = useCommentsState(postId);\n\n  useEffect(() => {\n    actions.fetchCommnentByPostId(postId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleAddComment = (args: Object) => {\n    console.log(args)\n    actions.addComment({\n      \"postId\": postId,\n      \"parent_id\": null,\n      ...args,\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <Post\n        title={post.title}\n        date={post.publish_date}\n        onAddComment={handleAddComment}\n      >\n        {post.content}\n      </Post>\n      <CommentsGroup\n        comments={comments}\n        loading={isFetching}\n        onAddComment={handleAddComment}\n      />\n    </div>\n  );\n};\n\nexport default ViewArticle;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { CommentsProvider } from 'apiContext';\nimport Layout from 'ui/layout';\nimport { ViewHome } from 'views/home';\nimport { ViewArticle } from 'views/article';\nimport 'assets/styles/index.scss';\n\nconst App = () => (\n  <Router>\n    <CommentsProvider>\n      <Layout>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <ViewHome />\n          </Route>\n          <Route path=\"/article/:postId\">\n            <ViewArticle />\n          </Route>\n          <Route path=\"*\">\n            <ViewHome />\n          </Route>\n        </Switch>\n\n      </Layout>\n    </CommentsProvider>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}